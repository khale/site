@inproceedings{MA:2021:OPENMP,
 abstract = {OpenMP implementations make increasing demands on the kernel. We take the next step and consider bringing OpenMP into the kernel. Our vision is that the entire OpenMP application, run-time system, and a kernel framework is interwoven to become the kernel, allowing the OpenMP implementation to take full advantage of the hardware in a custom manner. We compare and contrast three approaches to achieving this goal. The first, runtime in kernel (RTK), ports the OpenMP runtime to the kernel, allowing any kernel code to use OpenMP pragmas. The second, process in kernel (PIK) adds a specialized process abstraction for running user-level OpenMP code within the kernel. The third, custom compilation for kernel (CCK), compiles OpenMP into a form that leverages the kernel framework without any intermediaries. We describe the design and implementation of these approaches, and evaluate them using NAS and other benchmarks.},
 address = {New York, NY, USA},
 articleno = {65},
 author = {Ma, Jiacheng and Wang, Wenyi and Nelson, Aaron and Cuevas, Michael and Homerding, Brian and Liu, Conghao and Huang, Zhen and Campanoni, Simone and Hale, Kyle and Dinda, Peter},
 booktitle = {Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis},
 doi = {10.1145/3458817.3476183},
 isbn = {9781450384421},
 keywords = {OpenMP, parallelism, operating systems},
 location = {St. Louis, Missouri},
 numpages = {17},
 publisher = {Association for Computing Machinery},
 series = {SC '21},
 title = {Paths to OpenMP in the Kernel},
 url = {https://doi.org/10.1145/3458817.3476183},
 year = {2021}
}

